<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
<!-- Created by GNU Texinfo 5.1, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Cấu trúc và ý nghĩa của chương trình máy tính, 2e: 4.4.4.1</title>

<meta name="description" content="Cấu trúc và ý nghĩa của chương trình máy tính, 2e: 4.4.4.1"/>
<meta name="keywords" content="Cấu trúc và ý nghĩa của chương trình máy tính, 2e: 4.4.4.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="Generator" content="texi2any"/>
<meta charset="utf-8"/>
<link href="index.xhtml#Top" rel="start" title="Top"/>
<link href="Term-Index.xhtml#Term-Index" rel="index" title="Term Index"/>
<link href="index.xhtml#SEC_Contents" rel="contents" title="Table of Contents"/>
<link href="4_002e4_002e4.xhtml#g_t4_002e4_002e4" rel="prev" title="4.4.4"/>
<link href="4_002e4_002e4_002e2.xhtml#g_t4_002e4_002e4_002e2" rel="next" title="4.4.4.2"/>
<link href="4_002e4_002e4.xhtml#g_t4_002e4_002e4" rel="prev" title="4.4.4"/>

<link href="css/style.css" rel="stylesheet" type="text/css" />
<link href="css/prettify.css" rel="stylesheet" type="text/css" />

<script class="prettifier" src="js/highlight/prettify.js" type="text/javascript"></script>
<script class="prettifier" src="js/highlight/lang-lisp.js" type="text/javascript"></script>
</head>

<body>
<section><a id="g_t4_002e4_002e4_002e1"></a>
<nav class="header">
<p>
Next: <a href="4_002e4_002e4_002e2.xhtml#g_t4_002e4_002e4_002e2" accesskey="n" rel="next">4.4.4.2</a>, Previous: <a href="4_002e4_002e4.xhtml#g_t4_002e4_002e4" accesskey="p" rel="prev">4.4.4</a>, Up: <a href="4_002e4_002e4.xhtml#g_t4_002e4_002e4" accesskey="u" rel="prev">4.4.4</a> &#160; [<a href="index.xhtml#SEC_Contents" title="Table of contents" accesskey="c" rel="contents">Contents</a>][<a href="Term-Index.xhtml#Term-Index" title="Index" accesskey="i" rel="index">Index</a>]</p>
</nav>
<hr/>

<a id="The-Driver-Loop-and-Instantiation"></a>
<h5 class="subsubsection"><span class="secnum">4.4.4.1</span><span class="sectitle">The Driver Loop and Instantiation</span></h5>

<p>The driver loop for the query system repeatedly reads input expressions.  If
the expression is a rule or assertion to be added to the data base, then the
information is added.  Otherwise the expression is assumed to be a query.  The
driver passes this query to the evaluator <code>qeval</code> together with an initial
frame stream consisting of a single empty frame.  The result of the evaluation
is a stream of frames generated by satisfying the query with variable values
found in the data base.  These frames are used to form a new stream consisting
of copies of the original query in which the variables are instantiated with
values supplied by the stream of frames, and this final stream is printed at
the terminal:
</p>
<div class="lisp">
<pre class="lisp">(define input-prompt  &quot;;;; Query input:&quot;)
(define output-prompt &quot;;;; Query results:&quot;)

(define (query-driver-loop)
  (prompt-for-input input-prompt)
  (let ((q (query-syntax-process (read))))
    (cond ((assertion-to-be-added? q)
           (add-rule-or-assertion! 
            (add-assertion-body q))
           (newline)
           (display 
            &quot;Assertion added to data base.&quot;)
           (query-driver-loop))
          (else
           (newline)
           (display output-prompt)
           (display-stream
            (stream-map
             (lambda (frame)
               (instantiate
                q
                frame
                (lambda (v f)
                  (contract-question-mark v))))
             (qeval q (singleton-stream '()))))
           (query-driver-loop)))))
</pre></div>

<p>Here, as in the other evaluators in this chapter, we use an abstract syntax for
the expressions of the query language.  The implementation of the expression
syntax, including the predicate <code>assertion-to-be-added?</code> and the selector
<code>add-assertion-body</code>, is given in <a href="4_002e4_002e4_002e7.xhtml#g_t4_002e4_002e4_002e7">4.4.4.7</a>.
<code>Add-rule-or-assertion!</code> is defined in <a href="4_002e4_002e4_002e5.xhtml#g_t4_002e4_002e4_002e5">4.4.4.5</a>.
</p>
<p>Before doing any processing on an input expression, the driver loop transforms
it syntactically into a form that makes the processing more efficient.  This
involves changing the representation of pattern variables.  When the query is
instantiated, any variables that remain unbound are transformed back to the
input representation before being printed.  These transformations are performed
by the two procedures <code>query-syntax-process</code> and
<code>contract-question-mark</code> (<a href="4_002e4_002e4_002e7.xhtml#g_t4_002e4_002e4_002e7">4.4.4.7</a>).
</p>
<p>To instantiate an expression, we copy it, replacing any variables in the
expression by their values in a given frame.  The values are themselves
instantiated, since they could contain variables (for example, if <code>?x</code> in
<code>exp</code> is bound to <code>?y</code> as the result of unification and <code>?y</code> is
in turn bound to 5).  The action to take if a variable cannot be instantiated
is given by a procedural argument to <code>instantiate</code>.
</p>
<div class="lisp">
<pre class="lisp">(define (instantiate 
         exp frame unbound-var-handler)
  (define (copy exp)
    (cond ((var? exp)
           (let ((binding 
                  (binding-in-frame 
                   exp frame)))
             (if binding
                 (copy 
                  (binding-value binding))
                 (unbound-var-handler 
                  exp frame))))
          ((pair? exp)
           (cons (copy (car exp)) 
                 (copy (cdr exp))))
          (else exp)))
  (copy exp))
</pre></div>

<p>The procedures that manipulate bindings are defined in <a href="4_002e4_002e4_002e8.xhtml#g_t4_002e4_002e4_002e8">4.4.4.8</a>.
</p>
<hr/>
<nav class="header">
<p>
Next: <a href="4_002e4_002e4_002e2.xhtml#g_t4_002e4_002e4_002e2" accesskey="n" rel="next">4.4.4.2</a>, Previous: <a href="4_002e4_002e4.xhtml#g_t4_002e4_002e4" accesskey="p" rel="prev">4.4.4</a>, Up: <a href="4_002e4_002e4.xhtml#g_t4_002e4_002e4" accesskey="u" rel="prev">4.4.4</a> &#160; [<a href="index.xhtml#SEC_Contents" title="Table of contents" accesskey="c" rel="contents">Contents</a>][<a href="Term-Index.xhtml#Term-Index" title="Index" accesskey="i" rel="index">Index</a>]</p>
</nav>


</section>
</body>
</html>
